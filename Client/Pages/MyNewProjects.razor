@page "/Projects"
@using PB.Client.Services
@using PB.Core
@using System.Net.Http
@inject HttpClient http
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components
@using Radzen.Blazor
@inject Radzen.DialogService DialogService

<h1>My Projects</h1>

<div class="container">
    <div class="row py-5">
        <div class="col">
            <RadzenCard>

                <RadzenDataList WrapItems="true" AllowPaging="true" Data="@projects" TItem="ProjectListDTO" PageSize="5" >
                    <Template Context="project">
                        <RadzenCard Style="width: 100%; padding: 0; overflow: hidden;">
                            <div class="container">
                                <div class="row">
                                    <div class="col-lg-2 p-2 project-title">
                                            <h3 class="h5"><a href="/project/@project.ID">@project.Title</a></h3>
                                    </div>
                                    <div class="col-lg-7 p-3">
                                        <div class="row d-flex">
                                            <div class="col-md-6 col-lg-5">
                                                <h5 class="mb-0">Description:</h5>
                                                <p class="mb-sm-2 mb-lg-0">@(project.Description.Substring(0,Math.Min(project.Description.Length, 20)))</p>
                                            </div>
                                        </div>

                                    </div>
                                    <p>Visibility: @project.Status</p>
                                    @if (project.Status == Status.Visible)
                                    {
                                    <RadzenButton Click=@(args => ChangeVisibility(project.ID, Status.Hidden)) Text="Make Hidden" />
                                    }
                                    else
                                    {
                                    <RadzenButton Click=@(args => ChangeVisibility(project.ID, Status.Visible)) Text="Make Visible" />
                                    }
                                    <RadzenButton Click=@(args => EditProject(project.ID)) Text="Edit" />
                                    <RadzenButton Click=@(args => DeleteProject(project.ID)) Text="Delete" />
                                    <div class="col-lg-2 p-3">
                                        <RadzenButton Text="Go To" Class="w-100" />
                                    </div>
                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>

            </RadzenCard>
        </div>
    </div>
</div>

@code {

    private IEnumerable<ProjectListDTO>? projects { get; set; }
    protected override async Task OnInitializedAsync()
    {
        projects = await ProjectService.GetMyProjects(http);
    }

    async void ChangeVisibility(int id, Status status)
    {
        var result = await ProjectService.UpdateProjectVisibility(http, new ProjectVisibilityUpdateDTO(id, status));
        if (result.IsSuccessStatusCode)
        {
            await OnInitializedAsync();
            StateHasChanged();
        }
    }

    async void DeleteProject(int id)
    {
        Console.WriteLine($"Id: {id}");
        var result = await ProjectService.DeleteProject(http, id);
        if (result.IsSuccessStatusCode)
        {
            await OnInitializedAsync();
            StateHasChanged();
        }
    }

    void EditProject(int id)
    {
        NavigationManager.NavigateTo($"{NavigationManager.BaseUri}projectform?pid={id}");
    } 

}