@page "/Projects"
@using PB.Client.Services
@using PB.Core
@using System.Net.Http
@inject HttpClient http
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components
@using Radzen.Blazor
@inject Radzen.DialogService DialogService

<h1>Projects</h1>
<div class="container">
    <div class="row py-5">
        <div class="col">
            <RadzenCard>

                <RadzenDataList WrapItems="true" AllowPaging="true" Data="@projects" TItem="ProjectListDTO" PageSize="5" >
                    <Template Context="project">
                        <RadzenCard Style="width: 100%; padding: 0; overflow: hidden;">
                            <div class="container">
                                    <div class="col-lg-7 p-7 project-title">
                                            <h3 class="h5"><a href="/project/@project.ID">@(project.Title.Substring(0,Math.Min(project.Title.Length, 49)))</a></h3>
                                     <div class="row">
                                         <div class="col-lg-8 p-20">
                                        
                                            <div class="col-md-10 col-lg-10">
                                                <h5 class="mb-0">Supervisor:</h5>
                                                        <p class="mb-sm-8 mb-lg-8">@(project.Title.Substring(0,Math.Min(project.Title.Length, 30)))</p>
                                                        
                                            <div class="row">
                                            <h5 class="mb-0">Description:</h5>
                                            @if (project.Description.Length>80){
                                                    <p class="mb-sm-5 mb-lg-8">@(project.Description.Substring(0,Math.Min(project.Description.Length, 80)))...</p>
                                                } else {
                                                    <p class="mb-sm- mb-lg-8">@(project.Description.Substring(0,Math.Min(project.Description.Length, 80)))</p>
                                                }     
                                        </div>
                                            </div>
                                        </div>       
                                    </div>
                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>

            </RadzenCard>
        </div>
    </div>
</div>
<Style>

.h5 {
padding: 1em 0em;
text-decoration: none;

}

</Style>

@code {

    private IEnumerable<ProjectListDTO>? projects { get; set; }
    protected override async Task OnInitializedAsync()
    {
        projects = await ProjectService.GetMyProjects(http);
    }

    async void ChangeVisibility(int id, Status status)
    {
        var result = await ProjectService.UpdateProjectVisibility(http, new ProjectVisibilityUpdateDTO(id, status));
        if (result.IsSuccessStatusCode)
        {
            await OnInitializedAsync();
            StateHasChanged();
        }
    }

}